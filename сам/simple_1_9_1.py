# -*- coding: utf-8 -*-
import numpy as np

# === 1. Размерные масштабные параметры ===
t_m  = 1.0          # [с]   — характерное время
u_m  = 0.1          # [м/с] — характерная скорость
p_m  = 1.33e4       # [Па]  — ≈ 100 мм рт.ст.
nu_m = 3.5e-6       # [м^2/с] — кинематическая вязкость крови

# === 2. Производные масштабные множители ===
x_m   = t_m * u_m                     # [м]
s_m   = t_m**2 * u_m**2               # [м^2]
rho_m = p_m / u_m**2                  # [кг/м^3]
g_m   = u_m / t_m                     # [м/с^2]
k_dm  = t_m**2 * u_m**3 / p_m         # [—]
theta = 5e-8                          # [м^2/Па] — упругость сосуда (примерно)
theta_star = theta * p_m / s_m        # безразмерный коэффициент упругости

# === 3. Размерные параметры сетки ===
L     = 1e-3       # [м] длина сосуда
Nx    = 101        # число узлов
h     = L / (Nx - 1)
sigma = 0.9
tau   = sigma * h / u_m               # [с] шаг по времени

# === 4. Безразмерные параметры сетки ===
L_star   = L / x_m
h_star   = h / x_m
tau_star = tau / t_m

# === 5. Безразмерные физические параметры ===
nu_star  = nu_m / nu_m                # = 1.0
g        = 9.81                       # [м/с^2]
g_star   = g / g_m
rho_star = 1.0                        # нормировка
k_d      = 1.0
k_d_star = k_d / k_dm

# === 6. Безразмерные начальные и граничные условия (вариант A: стационарный поток) ===
u0_star = 0.0                         # начальная скорость
p0_star = 1.0                         # базовое давление
S0_star = 1.0                         # начальная площадь (нормирована)
p_in_star  = 1.01                     # входное давление (немного выше)
p_out_star = 1.00                     # выходное давление

# === 7. Проверка ===
print("=== Масштабные множители ===")
print(f"x_m   = {x_m:.3e} м")
print(f"s_m   = {s_m:.3e} м^2")
print(f"rho_m = {rho_m:.3e} кг/м^3")
print(f"g_m   = {g_m:.3e} м/с^2")
print(f"k_dm  = {k_dm:.3e}")
print(f"theta* = {theta_star:.3e}")

print("\n=== Безразмерные параметры ===")
print(f"L*     = {L_star:.3e}")
print(f"h*     = {h_star:.3e}")
print(f"tau*   = {tau_star:.3e}")
print(f"nu*    = {nu_star:.3e}")
print(f"g*     = {g_star:.3e}")
print(f"rho*   = {rho_star:.3e}")
print(f"k_d*   = {k_d_star:.3e}")

print("\n=== Граничные и начальные условия ===")
print(f"u0* = {u0_star:.3f}")
print(f"p0* = {p0_star:.3f}")
print(f"S0* = {S0_star:.3f}")
print(f"p_in* = {p_in_star:.3f}, p_out* = {p_out_star:.3f}")
